<?xml version="1.0" encoding="utf-8"?><waypoints type="TRAVEL">
	<onload><![CDATA[
		
		secPass							= 'animal10'
		chargesItemshopID		= FindItemShopGUID (202928,"coin")	--898789	-- this changes sometimes - reason unknown
		numTokensToKeep			= 0
		maxStoneTier				= 9				-- max tier to build
		buyBeltTier					= 5				-- max available white item tier
		chars								= nil
		
		Fusion_Config ('Random Fusion Stones', true)
		Fusion_Config ('Fusion Stones', false)
		Fusion_Config ('Purified Fusion Stones', false)
		Fusion_Config ('Use Clean Items', true)
		Fusion_Config ('White', true)
		Fusion_Config ('Green', false)
		Fusion_Config ('Blue', false)
		Fusion_Config ('Purple', false)
		Fusion_Config ("Maximum Stats", 0)
		
		if getAcc()==47 then 
			chars = {{account = 47, chars = {7,4,5,8}, names = {'Mainbänker','Kräuterbänker','Holzbänker','Erzbänker'}}}
		end
		
		if getAcc()==68 then
			chars = {{account = 68, chars = {1,2,3,5,6,7,4}, names = {'Foodbänker','Matsbänker','Manabänker','Restebänker','Crapbänker','Dailybänker','Steinbänker'}}}
		end
		
		zId = getZoneId ()
		while zId~=27 and zId~=2 and zId~=1 and not travelTo ('Varanas') do
			message ('unable to go to Varanas', true);
			zId = getZoneId ()
		end
		__WPL:setWaypointIndex (__WPL:getNearestWaypoint (player.X, player.Z));

		function getNextCharName ()
			local idx = 0
			for id,name in ipairs (chars[1].names) do
				if convert_utf8_ascii(asciiToUtf8_umlauts(name))==player.Name then
					idx = id + 1
				elseif idx==id then
					return name
				end
			end
			return nil
		end
		
		function buyCharges ()
			repeat
				inventory:update ()
				local numTokens = inventory:itemTotalCount (203038) - numTokensToKeep
				if numTokens>=100 then
					print ('buying 10 arcane charges with phirius tokens');
					BuyFromItemShop (chargesItemshopID, secPass, 1);
				end
			until numTokens<100
			repeat
				item = inventory:findItem (202928)
				if item then item:use () end
			until item==nil
		end
		
		function getBagSpace ()
			inventory:update ()
			return inventory:itemTotalCount (0)
		end
		
		function getNumItemsInBag ()
			inventory:update ()
			return inventory:itemTotalCount (228966)
		end
		
		function getNumStonesInBag ()
			inventory:update ()
			return inventory:itemTotalCount (202999)
		end
		
		function getNextTravelTarget ()
			if Fusion_NumberToBuy(buyBeltTier)>0 then
				if getNumStonesInBag ()>0 and reqItems~=nil and reqItems>0 and Fusion_NumberToBuy(buyBeltTier)>0 then return 'items' end
				if getNumItemsInBag ()>0 and reqStones~=nil and reqStones>0 then return 'stones' end
				return 'stones'
			else
				return 'home'
			end
		end
		
		function buyItemsFromMerchant (merchant, itemID, price, max)
			if max>0 then repeat 							
				while inventory.Money<price do
					print ("\a\a\a\a\a")
					print ("we need more money")
					player:sleep ()
					inventory:update ()
				end
				if not RoMScript ("StoreFrame:IsVisible ()") then
					while not player:target_NPC (merchant) do
						print ("\a\a\a\a\a")
						print ("unable to target npc")
						player:sleep ()
					end
					RoMScript ("ChoiceOption (1)") yrest (500)
				end
				store:buyItem (itemID)
				max = max - 1
			until max<=0 or getBagSpace ()==0 end
			RoMScript ('CloseAllWindows ()')
		end
		
		function makeManaStones (pos)
			repeat
				local maxBuildStones	= Fusion_NumberToBuy(buyBeltTier)
				local buyCount				= 0
				reqItems				= math.max (0, maxBuildStones - getNumItemsInBag ())
				reqStones				= math.max (0, maxBuildStones - getNumStonesInBag ())
				
print ('can build '..maxBuildStones..' more T'..buyBeltTier..' stones.')
print ('  items: '..reqItems..' to buy + '..getNumItemsInBag ()..' in bag')
print ('  stones: '..reqStones..' to buy + '..getNumStonesInBag ()..' in bag')

				if pos=='VaranasWest' and reqStones>0 then
					buyCount			= math.min (reqStones, getBagSpace ())
					if getNumItemsInBag ()<=0 then
						buyCount		= math.min (buyCount, getBagSpace () - 3)
					end
print ('-> buying '..buyCount..' stones')
					if buyCount>0 then buyItemsFromMerchant (110576, 202999, 1980, buyCount) end
				end
				RoMScript ('CloseStore ()')
				
				if pos=='WailingFjord' and reqItems>0 then
					buyCount			= math.min (reqItems, getBagSpace ())
					if getNumStonesInBag ()<=0 then
						buyCount		= math.min (buyCount, getBagSpace () - 3)
					end
print ('-> buying '..buyCount..' items')
					if buyCount>0 then buyItemsFromMerchant (123010, 228966, 6124, buyCount) end
				end
				
				if getNumItemsInBag ()>0 and getNumStonesInBag ()>0 then
					Fusion_MakeMaxManaStones (maxStoneTier)
					if pos==nil then
						break;
					end
				else
					break
				end
				
			until false
		end
		
		function receiveMail ()
			repeat
				UMM_TakeMail()
			until RoMScript("UMMMailManager.MailCount") == 0
			RoMScript("HideUIPanel(UMMFrame);")
		end
		
		function sendMail ()
			inventory:update ()
			local nextCharName = getNextCharName ()
			if nextCharName~=nil then
				if inventory.Money>10000 then
					UMM_SendMoney (nextCharName, inventory.Money-10000)
				end
				local IDs	= {228966,202999}
				for i=buyBeltTier,maxStoneTier do
					table.insert (IDs, 202839+i);
				end
				UMM_SendByNameOrId(nextCharName, IDs)
			else
message ('no next char found', true)
			end
			RoMScript("HideUIPanel(UMMFrame);")
		end
		
		combatMode (false)
		if chars then SetCharList (chars) end
		buyCharges ()
		
	]]></onload>
	<!-- Jammerförde -->
	<!-- #  1 --><waypoint x="-9175" z="3055" tag="snoop_WailingFjord"><![CDATA[
		__WPL:setDirection (WPT_FORWARD)
		if getNextTravelTarget ()~='items' then
			while not travelTo ('Varanas') do
				print ('unable to reach zone')
				player:sleep ()
			end
			__WPL:setWaypointIndex (__WPL:findWaypointTag ("snoop_Varanas"))
		end
	]]></waypoint>
	<!-- #  2 --><waypoint x="-9660" z="2495" />
	<!-- #  3 --><waypoint x="-9880" z="2265" tag="mailbox_WailingFjord"><![CDATA[
	]]></waypoint>
	<!-- #  4 --><waypoint x="-10263" z="2217" />
	<!-- #  5 --><waypoint x="-10263" z="2217" tag="merchant_WailingFjord"><![CDATA[
		makeManaStones ('WailingFjord')
		__WPL:setDirection (WPT_BACKWARD)
	]]></waypoint>
	<!-- Varanas -->
	<!-- #  6 --><waypoint x="2307" z="1152" tag="snoop_Varanas"><![CDATA[
		makeManaStones ()
		if getNextTravelTarget ()=='stones' then
			while not travelTo ('VaranasWest') do
				print ('unable to reach zone')
				player:sleep ()
			end
			__WPL:setWaypointIndex (__WPL:findWaypointTag ("snoop_VaranasWest"))
			return
		elseif getNextTravelTarget ()=='items' then
			while not travelTo ('WailingFjord') do
				print ('unable to reach zone')
				player:sleep ()
			end
			__WPL:setWaypointIndex (__WPL:findWaypointTag ("snoop_WailingFjord"))
			return
		else
			while not travelTo ('LogarHousemaid') do
				print ('unable to reach zone')
				player:sleep ()
			end
			__WPL:setWaypointIndex (__WPL:findWaypointTag ("LogarHousemaid"))
			return
		end
	]]></waypoint>
	<!-- #  7 --><waypoint x="2908" z="-798" tag="snoop_VaranasWest"><![CDATA[
		__WPL:setDirection (WPT_FORWARD)
		if getNextTravelTarget ()~='stones' then
			while not travelTo ('Varanas') do
				print ('unable to reach zone')
				player:sleep ()
			end
			__WPL:setWaypointIndex (__WPL:findWaypointTag ("snoop_Varanas"))
		end
	]]></waypoint>
	<!-- #  8 --><waypoint x="2795" z="-1008"/>
	<!-- #  9 --><waypoint x="2811" z="-1307"/>
	<!-- #  10 --><waypoint x="2786" z="-1408"/>
	<!-- #  11 --><waypoint x="2751" z="-1449"/>
	<!-- #  12 --><waypoint x="2745" z="-1642"/>
	<!-- #  13 --><waypoint x="2745" z="-1642" tag="merchant_VaranasWest"><![CDATA[
		makeManaStones ('VaranasWest')
		__WPL:setDirection (WPT_BACKWARD)
	]]></waypoint>
	
	<!-- #  14 --><waypoint x="-433" z="-5971" tag="LogarHousemaid"><![CDATA[
		if Fusion_NumberToBuy(buyBeltTier)<=3 then	-- we have finished
			sendMail ()
			RoMScript ("CloseAllWindows ()")
			LoginNextChar ();
			loadProfile ()
			loadPaths (__WPL.FileName)
			return
		else
			receiveMail ()
			--Fusion_MakeMaxManaStones (maxStoneTier)
			inventory:update ()
			local mount = inventory:getMount();
			if not mount then 
				player:target_NPC (110782)
				RoMScript ("ChoiceOption(1)"); yrest(250)
				RoMScript ("ChoiceOption(1)"); yrest(250)
				RoMScript ("ClickRequestDialogButton(0)"); yrest(2000)
				inventory:update ()
			end
			player:mount () 
			while not travelTo ('Varanas') do
				print ('unable to reach zone')
				player:sleep ()
			end
			__WPL:setWaypointIndex (__WPL:findWaypointTag ("snoop_Varanas"))
			end
	]]></waypoint>

</waypoints>
